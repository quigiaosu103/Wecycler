{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/digest.rs","byte_start":45,"byte_end":58,"line_start":2,"line_end":2,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use generic_array::typenum::Unsigned;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/digest.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse generic_array::typenum::Unsigned;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m          crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/digest.rs","byte_start":83,"byte_end":96,"line_start":3,"line_end":3,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use generic_array::{ArrayLength, GenericArray};","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/digest.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse generic_array::{ArrayLength, GenericArray};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m          crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/dyn_digest.rs","byte_start":96,"byte_end":109,"line_start":5,"line_end":5,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use generic_array::typenum::Unsigned;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/dyn_digest.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse generic_array::typenum::Unsigned;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m          crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/fixed.rs","byte_start":60,"byte_end":73,"line_start":4,"line_end":4,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use generic_array::{ArrayLength, GenericArray};","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/fixed.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse generic_array::{ArrayLength, GenericArray};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m          crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m          crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/lib.rs","byte_start":2102,"byte_end":2115,"line_start":54,"line_end":54,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"pub use generic_array::{self, typenum::consts};","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/lib.rs:54:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use generic_array::{self, typenum::consts};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m           crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"found possibly newer version of crate `typenum` which `generic_array` depends on","code":{"code":"E0460","explanation":"Found possibly newer version of crate `..` which `..` depends on.\n\nConsider these erroneous files:\n\n`a1.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {}\n```\n\n`a2.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"a\"]\n\npub fn foo<T>() {\n    println!(\"foo<T>()\");\n}\n```\n\n`b.rs`\n```ignore (needs-linkage-with-other-tests)\n#![crate_name = \"b\"]\n\nextern crate a; // linked with `a1.rs`\n\npub fn foo() {\n    a::foo::<isize>();\n}\n```\n\n`main.rs`\n```ignore (needs-linkage-with-other-tests)\nextern crate a; // linked with `a2.rs`\nextern crate b; // error: found possibly newer version of crate `a` which `b`\n                //        depends on\n\nfn main() {}\n```\n\nThe dependency graph of this program can be represented as follows:\n```text\n    crate `main`\n         |\n         +-------------+\n         |             |\n         |             v\ndepends: |         crate `b`\n `a` v1  |             |\n         |             | depends:\n         |             |  `a` v2\n         v             |\n      crate `a` <------+\n```\n\nCrate `main` depends on crate `a` (version 1) and crate `b` which in turn\ndepends on crate `a` (version 2); this discrepancy in versions cannot be\nreconciled. This difference in versions typically occurs when one crate is\ncompiled and linked, then updated and linked to another crate. The crate\n\"version\" is a SVH (Strict Version Hash) of the crate in an\nimplementation-specific way. Note that this error can *only* occur when\ndirectly compiling and linking with `rustc`; [Cargo] automatically resolves\ndependencies, without using the compiler's own dependency management that\ncauses this issue.\n\nThis error can be fixed by:\n * Using [Cargo], the Rust package manager, automatically fixing this issue.\n * Recompiling crate `a` so that both crate `b` and `main` have a uniform\n   version to depend on.\n\n[Cargo]: ../cargo/index.html\n"},"level":"error","spans":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/lib.rs","byte_start":2205,"byte_end":2218,"line_start":59,"line_end":59,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use generic_array::ArrayLength;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"perhaps that crate needs to be recompiled?","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the following crate versions were found:\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\ncrate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\ncrate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0460]\u001b[0m\u001b[0m\u001b[1m: found possibly newer version of crate `typenum` which `generic_array` depends on\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.9.0/src/lib.rs:59:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse generic_array::ArrayLength;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: perhaps that crate needs to be recompiled?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-b33689bde3278af4.rmeta\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rmeta\u001b[0m\n\u001b[0m           crate `typenum`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libtypenum-d40a559dcc4c7492.rlib\u001b[0m\n\u001b[0m           crate `generic_array`: /root/Hackathon/W2/Wecycler/contract/target/debug/deps/libgeneric_array-773b1251506e62dc.rmeta\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0460`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0460`.\u001b[0m\n"}
