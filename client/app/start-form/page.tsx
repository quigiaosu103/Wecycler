'use client';
import Head from "next/head";
import formImage from "/public/images/form.png";
import Image from "next/image";
import { useFormik } from "formik";
import * as Yup from "yup";



export default function Home() {
  //const navigation = useNavigation();


  const formik = useFormik({
    initialValues: {
      name: "",
      desciption: "",
      goalAmount: "",
      tokenAmount: "",
      startDate: "",
      endDate: "",
      location: ""
    },

    validationSchema: Yup.object({
      name: Yup.string()
        .max(20, "Name must be 20 characters or less.")
        .required("Name is required"),

      startDate: Yup.date()
        .required("Start date is required"),
      endDate: Yup.date()
        .required("End date is required"),
      terms: Yup.array().required("Terms of service must be checked"),
    }),

    onSubmit: (values) => {
      console.log("form submitted");
      console.log(values);
      //router.push({ pathname: "/success", query: values });
    },
  });

  return (
    <div>
      <Head>
        <title>Create New Project</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="  h-screen items-center flex justify-center">
        <form
          onSubmit={formik.handleSubmit}
          className="bg-white flex rounded-lg w-full font-latoRegular"
        >
          <div className="flex-1 text-gray-700  p-20 ">
            <h1 className="text-3xl pb-2 font-latoBold">
              Start a Campaign
            </h1>
            <p className="text-lg  text-gray-500">
              Add necessary details, images & Proof of Concepts
            </p>
            <div className="mt-6 ">
              {/* Name input field */}
              <div className="pb-4">
                <label
                  htmlFor="name"
                  className={`block font-latoBold text-sm pb-2 ${
                    formik.touched.name && formik.errors.name
                      ? "text-red-400"
                      : ""
                  } `}
                >
                  {formik.touched.name && formik.errors.name
                    ? formik.errors.name
                    : "Campaign Title"}
                </label>
                <p className="text-sm font-latoBold text-red-400 "></p>
                <input
                  className="border-2 border-gray-500 p-2 rounded-md w-1/2 focus:border-teal-500 focus:ring-teal-500 "
                  type="text"
                  name="name"
                  placeholder="Enter title of the campaign"
                  onChange={formik.handleChange}
                  value={formik.values.name}
                  onBlur={formik.handleBlur}
                />
              </div>
              
              {/* Desciption input field */}
              <div className="pb-4">
                <label
                  htmlFor="desciption"
                  className={`block font-latoBold text-sm pb-2 ${
                    formik.touched.desciption && formik.errors.desciption
                      ? "text-red-400"
                      : ""
                  } `}
                >
                  {formik.touched.desciption && formik.errors.desciption
                    ? formik.errors.desciption
                    : "Desciption"}
                </label>
                <p className="text-sm font-latoBold text-red-400 "></p>
                <textarea
                  className="border-2 border-gray-500 p-2 rounded-md w-full h-28 focus:border-teal-500 focus:ring-teal-500"
                  name="desciption"
                  placeholder="Enter short descriptions about idea of startup"
                  onChange={formik.handleChange}
                  value={formik.values.desciption}
                  onBlur={formik.handleBlur}
                />
              </div>
              
              <div className="flex flex-row w-full">
                {/* Goal Amount input field */}
                <div className="pb-4 w-1/2">
                  <label
                      htmlFor="goalAmount"
                      className={`block font-latoBold text-sm pb-2 ${
                        formik.touched.goalAmount && formik.errors.goalAmount
                          ? "text-red-400"
                          : ""
                      } `}
                    >
                      {formik.touched.goalAmount && formik.errors.goalAmount
                        ? formik.errors.goalAmount
                        : "Goal Amount"}
                    </label>
                    <p className="text-sm font-latoBold text-red-400 "></p>
                    <input
                      className="border-2 border-gray-500 p-2 rounded-md focus:border-teal-500 focus:ring-teal-500 w-1/2"
                      type="number"
                      name="goalAmount"
                      onChange={formik.handleChange}
                      value={formik.values.goalAmount}
                      onBlur={formik.handleBlur}
                    />
                </div>
                    
                <div className="pb-4 w-1/2">
                    <label
                      htmlFor="tokenAmount"
                      className={`block font-latoBold text-sm pb-2 ${
                        formik.touched.tokenAmount && formik.errors.tokenAmount
                          ? "text-red-400"
                          : ""
                      } `}
                    >
                      {formik.touched.tokenAmount && formik.errors.tokenAmount
                        ? formik.errors.tokenAmount
                        : "Token Amount"}
                    </label>
                    <p className="text-sm font-latoBold text-red-400 "></p>
                    <input
                      className="border-2 border-gray-500 p-2 rounded-md focus:border-teal-500 focus:ring-teal-500 w-1/2"
                      type="number"
                      name="tokenAmount"
                      onChange={formik.handleChange}
                      value={formik.values.tokenAmount}
                      onBlur={formik.handleBlur}
                    />
                </div>
              </div>

              <div className="flex flex-row">
                <div className="pb-4 w-1/2">
                  <label
                      htmlFor="startDate"
                      className={`block font-latoBold text-sm pb-2 ${
                        formik.touched.startDate && formik.errors.startDate
                          ? "text-red-400"
                          : ""
                      } `}
                    >
                      {formik.touched.startDate && formik.errors.startDate
                        ? formik.errors.startDate
                        : "Start Date"}
                    </label>
                    <p className="text-sm font-latoBold text-red-400 "></p>
                    <input
                      className="border-2 border-gray-500 p-2 rounded-md focus:border-teal-500 focus:ring-teal-500 w-1/2"
                      type="date"
                      name="startDate"
                      onChange={formik.handleChange}
                      value={formik.values.startDate}
                      onBlur={formik.handleBlur}
                    />
                </div>
                    
                <div className="pb-4 w-1/2">
                    <label
                      htmlFor="endDate"
                      className={`block font-latoBold text-sm pb-2 ${
                        formik.touched.endDate && formik.errors.endDate
                          ? "text-red-400"
                          : ""
                      } `}
                    >
                      {formik.touched.endDate && formik.errors.endDate
                        ? formik.errors.endDate
                        : "End Date"}
                    </label>
                    <p className="text-sm font-latoBold text-red-400 "></p>
                    <input
                      className="border-2 border-gray-500 p-2 rounded-md focus:border-teal-500 focus:ring-teal-500 w-1/2"
                      type="date"
                      name="endDate"
                      onChange={formik.handleChange}
                      value={formik.values.endDate}
                      onBlur={formik.handleBlur}
                    />
                </div>
              </div>
              
              
                <div className="pb-4">
                  <label
                      htmlFor="location"
                      className={`block font-latoBold text-sm pb-2 ${
                        formik.touched.location && formik.errors.location
                          ? "text-red-400"
                          : ""
                      } `}
                    >
                      {formik.touched.location && formik.errors.location
                        ? formik.errors.location
                        : "Location"}
                    </label>
                    <p className="text-sm font-latoBold text-red-400 "></p>
                    <input
                      className="border-2 border-gray-500 p-2 rounded-md  w-1/2 focus:border-teal-500 focus:ring-teal-500 "
                      type="text"
                      name="location"
                      onChange={formik.handleChange}
                      value={formik.values.location}
                      onBlur={formik.handleBlur}
                    />
              
                    
                
              </div>
              {/* button submit */}
              <button
                type="submit"
                className="bg-teal-500 font-latoBold text-sm text-white py-3 mt-6 rounded-lg w-1/2"
              >
                Start a Campaign
              </button>
            </div>
          </div>
          <div className="relative flex-1 m-20">
            <Image
              className=" object-cover rounded-lg"
              fill
              priority
              src={formImage}
              alt="form-learn"
            />
          </div>
        </form>
      </main>
    </div>
  );
}