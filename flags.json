{
  "components": {
    "client/widget/app.learn-more.page": {
      "code": "import React from 'react'\n\nconst LearnMorePage = () => {\n  return (\n    <div>\n      this is learn more\n    </div>\n  )\n}\n\nexport default LearnMorePage\n"
    },
    "client/widget/app.campaign.page": {
      "code": "'use client';\nimport {useEffect, useState} from \"react\";\nimport { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\n\nimport Search from \"@/components/Search\";\n\nimport ImageCard from \"../../components/ImageCard\"\nimport UserCard from \"../../components/UserCard\"\n\n\nimport clsx from 'clsx'\nimport { Play, Amatic_SC } from \"@next/font/google\"\nimport Button from \"../../components/Button\"\nimport Image from \"next/image\"\n\nimport AllMark from \"/public/images/AllMark.png\"\nimport ActiveMark from \"/public/images/ActiveMark.png\"\nimport  ProgressMark from \"/public/images/ProgressMark.png\"\nimport CancelMark from \"/public/images/CancelMark.png\"\n\nimport bg from \"/public/images/img65.png\"\nimport avatar from \"/public/images/Avatar.png\"\n\nimport {BiRocket,BiPlus} from \"react-icons/bi\";\n// import { Wallet } from \"@near-wallet-selector/core\";\n// import { Wallet } from \"@/utils/near-wallet\";\n\n\nconst play = Play({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst amatic_SC = Amatic_SC({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst SearchSection = () => {\n\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleSearch = (value) => {\n        // Here, you can access the search value when Enter is pressed\n        console.log(value);\n        setSearchValue(value);\n    };\n\n  return (\n    <div className=\"flex flex-row justify-between text-black max-w-[1440px] mx-auto lg:w-10/12 mt-40 p-10 border border-2 border-grey rounded-xl\">\n      <div className=\"flex flex-col justify-center items-start\">\n        <h1  className={\"text-2xl tracking-wide font-bold\"}>\n          Welcome BÃ¡o con\n        </h1>\n        <p className={\"text-lg tracking-wide\"}>\n        Manage your active Campaign from here.        \n        </p>\n        \n      </div>\n\n        <div className=\"flex items-center w-80\">\n            <div className=\"z-10 w-full max-w-md items-center justify-between font-mono text-sm lg:flex-inline\">\n                <Search onSearch={handleSearch} />\n                {/* <h2 className={'text-2xl mt-20 mx-2 underline'}>Searched for:</h2>\n                <p className={'text-2xl m-2'}> {searchValue}</p> */}\n            </div>\n        </div>\n      <div className=\"flex items-center \">\n        <Button href={\"/start-form\"} classes={\"text-white bg-[#59EC7A] rounded-xl\"} content={\"Start Campaign\"} icon={<BiPlus/>}></Button>  \n\n      </div>\n    </div>\n  )\n}\n\nconst CampaignSection = () => {\n  const wallet = useAppSelector(selectWallet);\n  const [campaignData, setCampaignData] = useState(null);\n\n  useEffect(() => {\n    get_a()\n    const savedData = localStorage.getItem(\"campaignData\");\n    if (savedData) {\n      setCampaignData(JSON.parse(savedData));\n    } else {\n      get_campaigns();\n    }\n  }, []);\n  \n  const get_a = async () => {\n      wallet?.viewMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"get_all_campaigns\"})\n      .then((data)=>(console.log(data)))\n  };\n\n  const get_campaigns = async () => {\n    const data = await wallet?.viewMethod({\n      contractId: \"dev-1690642410974-51262377694618\",\n      method: \"get_all_campaigns\"\n    });\n    localStorage.setItem(\"campaignData\", JSON.stringify(data));\n    setCampaignData(data);\n  };\n\n  const activeCampaignsCount = campaignData ? campaignData.filter(campaign => campaign.status === \"Active\").length : 0;\n  const initCampaignsCount = campaignData ? campaignData.filter(campaign => campaign.status === \"Init\").length : 0;\n  const doneCampaignsCount = campaignData ? campaignData.filter(campaign => campaign.status === \"Done\").length : 0;\n\n\n  return (\n    <div className=\"flex flex-col justify-between text-black max-w-[1440px] mx-auto lg:w-10/12 my-8\">\n        <div className=\"grid grid-cols-4 gap-8 \">\n            <div className=\"flex flex-row bg-[#D7FFDB] rounded-2xl h-24 items-center\">\n              <Image\n                  src={AllMark}\n                  alt={\"image\"}\n                  className=\"h-1/2 mx-6\"\n                  ></Image>\n                  <div className=\"flex flex-col\">\n                    <p className=\"text-2xl tracking-wide font-bold\">{campaignData?.length} </p>\n                    <p className=\"\">All </p>\n                  </div>\n                \n            </div>\n            \n            <div className=\"flex flex-row bg-[#D7FFDB] rounded-2xl h-24 items-center\">\n              <Image\n                  src={ActiveMark}\n                  alt={\"image\"}\n                  className=\"h-1/2 mx-6\"\n                  ></Image>\n                  <div className=\"flex flex-col\">\n                    <p className=\"text-2xl tracking-wide font-bold\">{activeCampaignsCount} </p>\n                    <p className=\"\">Active </p>\n                  </div>\n                \n            </div>\n\n            <div className=\"flex flex-row bg-[#D7FFDB] rounded-2xl h-24 items-center\">\n              <Image\n                  src={ProgressMark}\n                  alt={\"image\"}\n                  className=\"h-1/2 mx-6\"\n                  ></Image>\n                  <div className=\"flex flex-col\">\n                    <p className=\"text-2xl tracking-wide font-bold\">{initCampaignsCount} </p>\n                    <p className=\"\">In Progress</p>\n\n                  </div>\n                \n            </div>\n\n            <div className=\"flex flex-row bg-[#D7FFDB] rounded-2xl h-24 items-center\">\n              <Image\n                  src={CancelMark}\n                  alt={\"image\"}\n                  className=\"h-1/2 mx-6\"\n                  ></Image>\n                  <div className=\"flex flex-col\">\n                    <p className=\"text-2xl tracking-wide font-bold\">{doneCampaignsCount} </p>\n                    <p className=\"\">Done </p>\n\n                  </div>\n                \n            </div>\n        </div>\n      \n    </div>\n  )\n}\n\nconst VolunteSection = () => {\n  const wallet = useAppSelector(selectWallet);\n\n  \n\n  async function getCampaign(){\n    let pop = await wallet.viewMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"get_all_campaigns\", })\n    console.log(pop)\n  }\n\n  return (\n    <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 my-8\">\n\n        <div className=\" flex flex-row mb-8\">\n            <p className=\"text-3xl tracking-wide font-bold text-[#2bd03b]\">\n            3 Active \n            </p>\n            <p  className=\"text-3xl tracking-wide mx-2\">Campaigns</p>\n        </div>\n\n        <div className=\"flex flex-row justify-between px-16\">\n            <div className=\"\">\n                <div>\n                    <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                    description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                </div>\n            </div>\n            <div className=\"\">\n                <div>\n                    <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                    description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                </div>\n            </div>\n            <div className=\"\">\n                <div>\n                    <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                    description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                </div>\n            </div>    \n        </div>\n    </div>\n        \n  )\n}\n\nconst NewsSection = () => {\n    return (\n      <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 my-8\">\n  \n          <div className=\"text-[#2bd03b] mb-8\">\n              <p className=\"text-3xl tracking-wide font-bold\">\n              News\n              </p>\n          </div>\n  \n          <div className=\"flex flex-row justify-between px-16\">\n              <div className=\"\">\n                  <div>\n                      <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                      description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                  </div>\n              </div>\n              <div className=\"\">\n                  <div>\n                      <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                      description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                  </div>\n              </div>\n              <div className=\"\">\n                  <div>\n                      <ImageCard src={bg} alt=\"Image 65\" title={\"@better step\"} \n                      description={\"Turn your steps into earnings and create your art-filled collection with our Shoe NFTs.\"} />\n                  </div>\n              </div>    \n          </div>\n          <div className=\"w-full flex justify-center mt-16\">\n            <Button href={\"/over-view\"} classes={\"text-white bg-[#174931] rounded-md text-2xl\"} content={\"See More Campaign\"}></Button>  \n          </div>\n      </div>\n          \n    )\n  }\n\n  const TableSection = () => {\n    return (\n        <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 my-8\">\n          <div >\n              <p className=\"text-3xl tracking-wide font-bold\">\n              Recycle\n              </p>\n          </div>\n            <table className=\"table-auto w-full text-left text-xl \">\n              <thead>\n                  <tr>\n                      <th className=\" \">No</th>\n                      <th className=\" \">Item List</th>\n                      <th className=\" \">Open Price</th>\n                      <th className=\" \">Your Offer</th>\n                      <th className=\" \">Recent Offer</th>\n                      <th className=\" \">Time left</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr >\n                      <td>1</td>\n                      <td className=\" \"> \n                        <div className=\"flex flex-row\">\n                            <Image\n                              src={bg}\n                              alt={\"image\"}\n                              className=\"rounded-full h-8 w-14\"\n                            ></Image>\n                            Item List\n                        </div>\n                      </td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                  </tr>\n                  <tr >\n                      <td>2</td>\n                      <td className=\" \"> \n                        <div className=\"flex flex-row\">\n                            <Image\n                              src={bg}\n                              alt={\"image\"}\n                              className=\"rounded-full h-8 w-14\"\n                            ></Image>\n                            Item List\n                        </div>\n                      </td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                  </tr>\n                  <tr >\n                      <td>3</td>\n                      <td className=\" \"> \n                        <div className=\"flex flex-row\">\n                            <Image\n                              src={bg}\n                              alt={\"image\"}\n                              className=\"rounded-full h-8 w-14\"\n                            ></Image>\n                            Item List\n                        </div>\n                      </td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                      <td className=\" \">Item List</td>\n                  </tr>\n              </tbody>\n            </table>\n        \n      </div>\n          \n    )\n  }\n\n  const TopSection = () => {\n    const rocketIcon = <i className=\"fas fa-rocket\"></i>;\n    return (\n      <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 my-8\">\n        <div className=\"flex flex-row\">\n          <div className=\"text-[#0b3d16] whitespace-nowrap\">\n              <p className=\"text-4xl tracking-wide font-bold my-4\">\n              Top Collector\n              </p>\n              <p className=\"text-2xl tracking-wide\">\n                Checkout Our Top Rated Collector\n              </p>\n          </div>\n          <div className=\"w-full h-1/2 flex justify-end mt-auto\">\n            <Button href={\"/\"} classes={\"text-black bg-white rounded-2xl text-xl border border-2 border-black\"} content={\"View Rankings\"} icon={<BiRocket/>}></Button>  \n          </div>\n        </div>\n          \n  \n          <div className=\"grid grid-cols-4 gap-8 mx-28 my-8\">\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n            <div>\n              <UserCard\n                src={avatar} alt=\"Image 65\" title={\"@better step\"} \n                description={\"34.53 ETH\"} />\n            </div>\n          </div>\n      </div>\n          \n    )\n  }\n\nexport default function Home() {\n  return (\n    <main>\n      <div className={clsx(\"flex flex-col\", play.className)}>\n        <SearchSection/>\n        <CampaignSection/>\n        <VolunteSection/>\n        <NewsSection/>\n        <TableSection/>   \n        <TopSection/>\n\n      </div>\n    </main>\n  );\n}\n"
    },
    "client/widget/app.ConnectButton": {
      "code": "\"use client\";\n\nimport { memo, useEffect, useRef,useState  } from \"react\";\nimport { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\nimport { Wallet } from \"@near-wallet-selector/core\";\nimport Popup from \"../components/PopUp\";\nimport Button from \"../components/Button\"\n\nimport { date } from \"yup\";\n\nfunction ConnectWalletButton() {\n  const wallet = useAppSelector(selectWallet);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [userData, setUserData] = useState(null);\n  \n  const handleOpenPopup = () => {\n    setIsPopupOpen(true);\n  };\n\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  const onConnectWalletClicked = async () => {\n    if (!wallet)\n      return {\n        title: \"Wallet not initialized\",\n        description: \"Please try again later\",\n        status: \"error\",\n      };\n\n    if (wallet.accountId) {\n      return {\n        title: \"Wallet already connected\",\n        status: \"info\",\n      };\n    }\n\n    wallet.signIn();\n  };\n\n  const signOutClick = async () => {\n    if (!wallet)\n      return {\n        title: \"Wallet not initialized\",\n        description: \"Please try again later\",\n        status: \"error\",\n      };\n\n    wallet.signOut();\n  };\n\n  const isWalletConnected = !!wallet?.accountId;\n \n  // if (isWalletConnected){\n  //   wallet.viewMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"check_new_user\", })\n  // }\n\n  if (isWalletConnected){\n    wallet.viewMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"check_new_user\",args: {id: wallet.accountId} })\n    .then((data)=>{\n      if(!data)\n      {\n        wallet.callMethod({contractId:\"dev-1690642410974-51262377694618\",method:\"new_user\" })\n      }\n    })\n    wallet.viewMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"get_user_by_id\",args: {id: wallet.accountId}  })\n    .then((data)=>{console.log(data)})\n\n  }\n\n  const update_user_info = async () => {\n    if(wallet)\n    {\n      wallet.callMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"update_user\",args: {name: \"helo\", email_address: \"ha@gmail.com\", image: \"aaaaa\" }  })\n      .then((data)=>{console.log(data)})\n    }\n\n  };\n\n  useEffect(() => {\n    if (isWalletConnected) {\n      fetchData();\n    }\n  }, [isWalletConnected]);\n\n  const fetchData = async () => {\n    try {\n      const checkNewUserResponse = await wallet.viewMethod({\n        contractId: \"dev-1690642410974-51262377694618\",\n        method: \"check_new_user\",\n        args: { id: wallet.accountId }\n      });\n\n      if (!checkNewUserResponse) {\n        await wallet.callMethod({\n          contractId: \"dev-1690642410974-51262377694618\",\n          method: \"new_user\"\n        });\n      }\n\n      const getUserResponse = await wallet.viewMethod({\n        contractId: \"dev-1690642410974-51262377694618\",\n        method: \"get_user_by_id\",\n        args: { id: wallet.accountId }\n      });\n\n      setUserData(getUserResponse);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  return isWalletConnected ? (\n    <>\n    {/* <Button href={\"/profile\"} classes={\"border border-gray-600 px-4 py-2 rounded-md text-gray-600 hover:bg-gray-300 hover:border-b-4 hover:border-r-4 transition-all duration-100 font-medium ease-in-out\"} content={wallet.accountId?.split(\".\")[0]}></Button>   */}\n      <button\n        onClick={handleOpenPopup}\n        className=\"border border-gray-600 px-4 py-2 rounded-md text-gray-600 hover:bg-gray-300 hover:border-b-4 hover:border-r-4 transition-all duration-100 font-medium ease-in-out\"\n      >\n        {wallet.accountId?.split(\".\")[0]}\n      </button>\n      <Popup isOpen={isPopupOpen} onClose={handleClosePopup} signOut={signOutClick} update={update_user_info} userData={userData}/>\n\n    </>\n  ) : (\n    <button\n      onClick={onConnectWalletClicked}\n      className=\"border border-gray-600 px-4 py-2 rounded-md text-gray-600 hover:bg-gray-300 hover:border-b-4 hover:border-r-4 transition-all duration-100 font-medium ease-in-out\"\n    >\n      Connect\n    </button>\n  );\n}\n\nexport default ConnectWalletButton;\n"
    },
    "client/widget/app.profile.page": {
      "code": "import { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\nimport { Wallet } from \"@near-wallet-selector/core\";\n\nimport Search from \"@/components/Search\";\n\nimport ImageCard from \"../../components/ImageCard\"\nimport UserCard from \"../../components/UserCard\"\n\n\nimport clsx from 'clsx'\nimport { Play, Amatic_SC } from \"@next/font/google\"\nimport Button from \"../../components/Button\"\nimport Image from \"next/image\"\n\nimport AllMark from \"/public/images/AllMark.png\"\nimport ActiveMark from \"/public/images/ActiveMark.png\"\nimport  ProgressMark from \"/public/images/ProgressMark.png\"\nimport CancelMark from \"/public/images/CancelMark.png\"\n\nimport bg from \"/public/images/img65.png\"\nimport avatar from \"/public/images/Avatar.png\"\n\nimport {BiRocket,BiPlus} from \"react-icons/bi\";\n\n\nconst play = Play({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst amatic_SC = Amatic_SC({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst ProfileSection = (userData) => {\n\n  return (\n    <div className=\"flex flex-row justify-between text-black max-w-[1440px] mx-auto lg:w-10/12 mt-40 p-10 border border-2 border-grey rounded-xl\">\n      <div className=\"popup-content flex-col min-w-[1000px] min-h-[600px] flex \">\n            <div className=\"flex flex-row justify-between pb-8\">\n                <p className=\"text-black text-4xl font-normal\">\n                    Your Profile\n                </p>\n                {/* <button className=\"text-red-500\" onClick={onClose}>x</button> */}\n            </div>\n        \n            <div className='flex flex-row justify-center items-center'>\n                    <div className=\"w-1/3 flex justify-center\">\n                        <Image\n                            className=\" object-cover rounded-full w-28 h-28 border border-2 border-[#59EC7A] shadow-xl\"\n                            src={avatar}\n                            alt=\"form-learn\"\n                        />\n                    </div>\n                    \n                    <div className='flex flex-col font-light text-black tracking-wide w-2/3'>\n                        <p className=\"text-4xl\">\n                            Name: {userData?.meta_data.name}\n                        </p>\n                        <p>\n                            Acount id: {userData?.id}\n                        </p>\n\n                        <label\n                        htmlFor=\"name\"\n                        className={'block font-latoBold'}>\n                            Email\n                        </label>\n                        <input\n                            type=\"email\"\n                            value={newEmail}\n                            placeholder= {userData?.meta_data.email_address}\n                            onChange={handleEmailChange}\n                            className=\"border-none border-gray-300 rounded-lg\"\n                            />\n                        \n                        <p>\n                            Role: {userData?.role}\n                        </p>\n                        <p>\n                            Token amount: {userData?.meta_data.balance}\n                        </p>\n                    </div>\n            </div>\n\n                \n            <button className=\"text-green-400 rounded-lg mt-10 font-light border border-2 border-green-400\" onClick={update}>Edit</button>\n\n            <button className=\"text-green-400 rounded-lg mt-10 font-light border border-2 border-green-400\" onClick={update}>Update</button>\n            <button className=\"text-red-500 rounded-lg mt-10 font-light\" onClick={signOut}>Sign Out</button>\n            \n        </div>\n\n       \n    </div>\n  )\n}\n\n\n\nexport default function Home() {\n  return (\n    <main>\n      <div className={clsx(\"flex flex-col\", play.className)}>\n        <ProfileSection/>\n      </div>\n    </main>\n  );\n}\n"
    },
    "client/widget/app.over-view.page": {
      "code": "'use client';\nimport clsx from 'clsx'\nimport { Play, Amatic_SC } from \"@next/font/google\"\nimport { redirect, useSearchParams  } from \"next/navigation\";\nimport { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\n\nimport Button from \"../../components/Button\"\nimport ProgressBar from \"../../components/ProgressBar\"\nimport Image from \"next/image\"\n\nimport buttonRecycle from \"/public/images/bt_recycle.svg\"\nimport buttonDonate from \"/public/images/bt_donate.svg\"\nimport globe from \"/public/images/Globe.svg\"\nimport coin from \"/public/images/coin.svg\"\n\nimport pj_title from \"/public/images/pj_title.png\"\n\nimport {BiSolidStar,BiMap} from \"react-icons/bi\";\n\nconst play = Play({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst amatic_SC = Amatic_SC({\n  subsets: ['latin'],\n  weight: ['400', '700']\n})\n\nconst IntroSection = ({ parsedData }) => {\n    const dateObject = new Date(parsedData.deadline);\n    const startDateObject = new Date(parsedData.init_time);\n    const wallet = useAppSelector(selectWallet);\n    const router = useRouter()\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const txhash = urlParams.get(\"transactionHashes\")\n\n        if(txhash) {\n            if(parsedData.status == \"Active\"){\n                parsedData.status = \"Done\"\n                router.replace(\"/over-view?data=\" + JSON.stringify(parsedData))\n            }\n\n            if(parsedData.status == \"Init\"){\n                parsedData.status = \"Active\"\n                router.replace(\"/over-view?data=\" + JSON.stringify(parsedData))\n            }\n        }\n    }, [])\n\n    const getDayWithOrdinalSuffix = (day) => {\n        const suffixes = [\"st\", \"nd\", \"rd\"];\n        const specialCases = [11, 12, 13]; // 11th, 12th, 13th are exceptions\n      \n        const digit = day % 10;\n        const suffix = suffixes[digit - 1] || \"th\";\n      \n        if (specialCases.includes(day)) {\n          return day + \"th\";\n        }\n      \n        return day + suffix;\n      };\n\n    const monthNames = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n\n    const getDaysLeft = (startDate, endDate) => {\n        // Parse the date strings to Date objects\n        const start = new Date(startDate);\n        const end = new Date(endDate);\n      \n        // Calculate the difference between the dates in milliseconds\n        const difference = end.getTime() - start.getTime();\n      \n        // Convert the difference to days\n        const daysLeft = Math.ceil(difference / (1000 * 60 * 60 * 24));\n      \n        return daysLeft;\n    };\n\n    // Get the day (1-31)\n    const day = dateObject.getDate();\n\n        // Get the month (0-11). Note: January is 0, February is 1, and so on.\n    const monthIndex = dateObject.getMonth();\n    const monthName = monthNames[monthIndex];\n        // Get the year (4 digits)\n    const year = dateObject.getFullYear();\n    \n    const updateStatus = async () => {\n\n        await wallet.callMethod({contractId: \"dev-1690642410974-51262377694618\", method: \"set_camp_status\", args: {status: \"Active\", camp_id: parsedData?.id}})\n    }\n\n    const isValidUrl = (url) => {\n        try {\n          new URL(url);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      };\n\n    return (\n        <div className='flex flex-col'>\n            <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 mt-40 p-12 shadow-xl rounded-xl\">\n                <div className='flex flex-row justify-between'>\n                    <div className=\" flex flex-col \">\n                        <h1  className={clsx(\"text-6xl tracking-wide font-bold\", amatic_SC.className)}>\n                            {parsedData?.meta_data.title}\n                        </h1>\n                        <p className={clsx(\"text-2xl tracking-wide my-2\", amatic_SC.className)}>\n                        {parsedData?.owner}                        \n                        </p>\n                    </div>\n                    <div>\n                        <Image\n                            src={globe}\n                            alt={\"globe\"}\n                            layout=\"responsive\"\n                            className=\"h-1/2\"\n                            ></Image>\n                    </div>\n                </div>\n                \n                <div className=\"flex flex-row justify-center items-start gap-y-8\">\n                    <div className=\"grid grid-cols-3 gap-3 w-1/2\">\n                        <Image\n                        src={ isValidUrl(parsedData.meta_data.image) ? parsedData.meta_data.image : pj_title}\n                        alt={\"image\"}\n                        width={400}\n                        height={400}\n                        layout=\"responsive\"\n                        // objectFit='contain'\n                        className=\"w-1/3 h-1/2\"\n                        ></Image>\n                    </div>\n                    <div className=\"flex flex-col w-1/2 ml-20\">\n                        <h1  className={clsx(\"text-6xl tracking-wide font-bold text-[#73d88b]\", amatic_SC.className)}>\n                        Date: {monthName} {getDayWithOrdinalSuffix(day)} {year}            \n                        </h1>\n                        <p className='text-2xl tracking-wide '>\n                            {getDaysLeft(startDateObject,dateObject)} day left\n                        </p>\n                        <div className=\"flex space-x-3\">\n                            <p className=''>\n                                Status: {parsedData?.status}\n                            </p>\n                            {wallet?.accountId === parsedData?.owner && (parsedData?.status == \"Init\" || parsedData?.status == \"Active\")  && (<button onClick={updateStatus} className=\"border-2 bg-[#FFE500] border-black rounded-lg px-3\">Update</button>)}\n                        </div>\n                        <div className='flex flex-row'>\n                            <Image\n                            src={coin}\n                            alt={\"coin\"}>\n                            </Image>\n                            <p className='text-2xl tracking-wide'>\n\n                            {parsedData?.fund}\n                        </p>\n                        </div>\n                        \n                        <div className='pt-8'>\n                            <div className='flex flex-row justify-between'>\n                                <p>\n                                    Goal\n                                </p>\n                                <p>\n                                    {parsedData?.total_products}/{parsedData?.total_products_expected}\n                                </p>\n                            </div>\n                            <ProgressBar value={parsedData?.total_products} max={parsedData?.total_products_expected}/>\n                            <div className='flex flex-row justify-around pt-8'>\n\n                            {/* <Button href={\"/\"} classes={\"text-white\"} content={<Image src={buttonDonate} alt=\"buttonApply\"/>}></Button>   */}\n\n                            <Button href={\"/\"} classes={\"text-white\"} content={<Image src={buttonRecycle} alt=\"buttonApply\"/>}></Button>  \n\n\n                            </div>\n\n                        </div>\n                    </div>\n                </div> \n            </div>\n            \n        </div>\n    )\n}\n\nconst DesciptionSection = ({parsedData}) => {\n    return (\n        <div className=\"flex flex-col text-black max-w-[1440px] mx-auto lg:w-10/12 mt-8 p-8 \">\n            <div className=\" flex flex-row justify-between\">\n                <div>\n                    <h1  className={\"text-4xl tracking-wide mb-8\"}>\n                        <BiMap className='text-[#73d88b] text-6xl'/>\n                        District 7, HoChiMinh City                  \n                    </h1>\n                </div>\n               \n                <div className='flex flex-col '>\n                    <div className='flex flex-row'>\n                        <BiSolidStar size={24} className=\"text-yellow-500\"/>\n                        <BiSolidStar size={24} className=\"text-yellow-500\"/>\n                        <BiSolidStar size={24} className=\"text-yellow-500\"/>\n                        <BiSolidStar size={24} className=\"text-yellow-500\"/>\n                        <BiSolidStar size={24} className=\"text-yellow-500\"/>\n                    </div>\n                    <div>\n                        <p className='text-xl'>\n                            10 reviews\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <p className='text-justify'>\n                {parsedData?.meta_data.content}\n                </p>\n            </div>\n        </div>\n          \n    )\n  }\n  \n\nexport default function Home() {\n    const searchParams = useSearchParams()\n    const data = searchParams.get(\"data\")\n    const parsedData = JSON.parse(data);\n  return (\n    <main>\n      <div className={clsx(\"flex flex-col\", play.className)}>\n        <IntroSection parsedData={parsedData}/>\n        <DesciptionSection parsedData={parsedData}/>\n\n      </div>\n    </main>\n  );\n}\n"
    },
    "client/widget/app.create.page": {
      "code": "\"use client\"\n\nimport { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\nimport { useState, useEffect, memo } from \"react\";\nimport clsx from \"clsx\";\n\nconst initState = {\n  account_balance: 100,\n  fund: 0,\n  title: \"\",\n  content: \"\",\n  image: \"123\",\n  amount: 0,\n  init_time:  \"\",\n  deadline: \"\"\n}\n\nconst page = () => {\n\n  const [state, setState] = useState(initState)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const wallet = useAppSelector(selectWallet);\n  const isWalletConnected = !!wallet?.accountId;\n\n  function handleChange({target}){\n    console.log(state)\n    setState((prev) => ({\n      ...prev,\n      [target.getAttribute(\"name\")]: target.value\n    }))\n  }\n\n  async function createCampaign(e){\n    e.preventDefault()\n    const args = {...state, fund: Number(state.fund), amount: Number(state.amount), deadline: new Date(state.deadline).getTime(), init_time: new Date(state.init_time).getTime()}\n    console.log(args)\n    if(isWalletConnected){\n      await wallet.callMethod({contractId: 'dev-1690561706410-52327007706627', deposit: \"1000000000000000000000000\", method: 'new_campaign', args })\n    }\n\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const txhash = urlParams.get(\"transactionHashes\")\n\n    setIsSuccess(!!txhash)\n    if(txhash) alert(\"thÃ nh cÃ´ng!!!!\")\n  }, [])\n\n  return <>\n    {isSuccess ?\n    (<div>ThÃ nh cÃ´ng!!!!!</div>\n    ) : (\n      <div className=\" max-w-[1440px] mx-auto lg:w-10/12 pt-28\">\n          <form action=\"\" className=\"flex flex-col\">\n              <span>Campain Title</span>\n              <input name=\"title\" type=\"text\" placeholder='Enter the title of campaign' onChange={handleChange} value={state.title}/>\n              <span>Description</span>\n              <input name=\"content\" type=\"text\" placeholder='Enter the description about the program ' onChange={handleChange} value={state.content}/>\n              <span>Goal amount</span>\n              <input name=\"amount\" type=\"number\" placeholder='Enter a number' onChange={handleChange} value={state.amount}/>\n              <span>Tokens amount</span>\n              <input name=\"fund\" type=\"number\" placeholder='' onChange={handleChange} value={state.fund}/>\n              <span>Start day</span>\n              <input name=\"init_time\" type=\"date\" placeholder='' onChange={handleChange} value={state.init_time}/>\n              <span>End date</span>\n              <input name=\"deadline\" type=\"date\" placeholder='' onChange={handleChange} value={state.deadline}/>\n              <button className=\"bg-lime-500\">Add collector</button>\n              <button onClick={createCampaign}>Create Campaign</button>\n          </form>\n      </div>\n    )}\n  </>\n}\n\nexport default memo(page)\n"
    },
    "client/widget/components.TabsContent": {
      "code": "import React from 'react';\n\nconst TabContent = ({ children, activeTab, label }) => {\n  if (activeTab !== label) return null;\n\n  return (\n    <div className=\" p-4 rounded-b-lg\">\n      {children}\n    </div>\n  );\n};\n\nexport default TabContent;\n"
    },
    "client/widget/components.Button": {
      "code": "import Link from \"next/link\";\nimport clsx from 'clsx'\n\nconst Button = ({content, classes, href, icon=null}) => {\n  return (\n    <Link \n      href={href}\n      className={clsx(classes,  \"py-3 px-6\", \"flex items-center justify-center\")}\n    >\n      {icon && (\n          <span className=\"inline-flex items-center mr-2\">\n            {icon}\n          </span>\n        )}\n        {content}\n    </Link>\n  )\n}\n\nexport default Button\n"
    },
    "client/widget/components.ImageCard": {
      "code": "import React from \"react\";\nimport Image from \"next/image\";\nimport Button from \"./Button\";\n\nconst ImageCard = ({src, alt, title, description}) => {\n\n  return (\n    <div className=\"relative max-w-xs overflow-hidden rounded-2xl shadow-lg group \">\n      <div className=\"group-hover:scale-110 transform transition-transform\">\n        <Image\n          src={src}\n          alt={alt}\n          className=\"\"\n        />\n        <div className=\"p-8 bg-[#d7ffdb]\">\n          <h2 className=\"text-lg font-bold mb-2\">{title}</h2>\n          <p className=\"text-gray-500\">{description}</p>\n          <div className=\"flex flex-row justify-around pt-4 pb-8\" >\n            <div >\n              <Button href={\"/\"} classes={\" text-white bg-black rounded-full px-8\"} content={\"Donate\"}></Button>\n            </div>\n            <div >\n              <Button href={\"/\"} classes={\"text-white bg-[#3580ef] rounded-full px-8\"} content={\"Recycle\"}></Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n\n    </div>\n  );\n};\n\nexport default ImageCard;"
    },
    "client/widget/components.Tabs": {
      "code": "import React from 'react';\n\nconst Tab = ({ label, activeTab, onClick }) => {\n  const isActive = activeTab === label;\n\n  return (\n    <button\n      className={`px-4 py-2 rounded-lg ${\n        isActive ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'\n      }`}\n      onClick={() => onClick(label)}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Tab;\n"
    },
    "client/widget/components.PopUp": {
      "code": "import React, { useState } from \"react\";\nimport avatar from \"/public/images/Avatar.png\";\nimport Image from \"next/image\";\nimport { useAppSelector } from \"@/context/store\";\nimport { selectWallet } from \"@/features/walletSlice\";\n\nconst Popup = ({ isOpen, onClose, signOut, userData }) => {\n  const wallet = useAppSelector(selectWallet);\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  const update_user_info = async () => {\n    if(wallet)\n    {\n      wallet.callMethod({contractId:\"dev-1690642410974-51262377694618\", method: \"update_user\",args: {name: newName, email_address: newEmail, image: \"aaaaa\" }  })\n    }\n\n  };\n\n  const handleEmailChange = (event) => {\n    setNewEmail(event.target.value);\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleBackClick = () => {\n    setIsEditing(false);\n  };\n\n  const handleUpdateClick = () => {\n    // Call the update_user_info function here with newName and newEmail\n    update_user_info();\n    setIsEditing(false);\n  };\n\n  return (\n    <div className={`popup ${isOpen ? \"open\" : \"\"}`}>\n      <div className=\"popup-content flex-col min-w-[1000px] min-h-[600px] flex\">\n            <div className=\"flex flex-row justify-between pb-8\">\n                <p className=\"text-black text-4xl font-normal\">\n                    Your Profile\n                </p>\n                <button className=\"text-red-500\" onClick={onClose}>x</button>\n            </div>\n        <div className=\"flex flex-row justify-center items-center\">\n            <div className=\"w-1/3 flex justify-center\">\n                <Image\n                className=\" object-cover rounded-full w-28 h-28 border border-2 border-[#59EC7A] shadow-xl\"\n                src={avatar}\n                alt=\"form-learn\"\n                />\n            </div>\n\n            <div className=\"flex flex-col font-light text-black tracking-wide w-2/3\">\n                <label htmlFor=\"name\" className={\"block\"}>\n                Account Name\n                </label>\n                <input\n                type=\"text\"\n                value={newName}\n                name=\"name\"\n                placeholder={userData?.meta_data.name}\n                onChange={handleNameChange}\n                className={`border-none border-gray-300 rounded-lg ${\n                    isEditing ? \"bg-gray-100\" : \"\"\n                }`}\n                disabled={!isEditing}\n                />\n                <p>Acount id: {userData?.id}</p>\n\n                <label htmlFor=\"email\" className={\"block\"}>\n                Email\n                </label>\n                <input\n                type=\"email\"\n                value={newEmail}\n                name=\"email\"\n                placeholder={userData?.meta_data.email_address}\n                onChange={handleEmailChange}\n                className={`border-none border-gray-300 rounded-lg ${\n                    isEditing ? \"bg-gray-100\" : \"\"\n                }`}\n                disabled={!isEditing}\n                />\n\n                <p>Role: {userData?.role}</p>\n                <p>Token amount: {userData?.meta_data.balance}</p>\n            </div>\n        </div>\n\n        {!isEditing ? (\n          <button\n            className=\"text-green-400 rounded-lg mt-10 font-light border border-2 border-green-400\"\n            onClick={handleEditClick}\n          >\n            Edit\n          </button>\n        ) : (\n          <>\n\n            <button\n              className=\"text-green-400 rounded-lg mt-10 font-light border border-2 border-green-400\"\n              onClick={handleUpdateClick}\n            >\n              Update\n            </button>\n            <button\n              className=\"text-red-500 rounded-lg mt-10 font-light border border-2 border-gray-400\"\n              onClick={handleBackClick}\n            >\n              Back\n            </button>\n          </>\n        )}\n            <button\n              className=\"text-red-500 rounded-lg mt-10 font-light border border-2 border-red-400\"\n              onClick={signOut}\n            >\n              Sign Out\n            </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n"
    },
    "client/widget/components.ProgressBar": {
      "code": "import React from \"react\";\n\nconst ProgressBar = ({ value }) => {\n  return (\n    <progress className=\"w-full h-1 bg-gray-200 rounded-xl\" \n    value={value} \n    max=\"100\">\n      {value}%\n    </progress>\n  );\n};\n\nexport default ProgressBar;\n"
    },
    "client/widget/components.UserCard": {
      "code": "import React from \"react\";\nimport Image from \"next/image\";\n\nconst UserCard = ({src, alt, title, description}) => {\n\n  return (\n    <div className=\"relative w-64 h-64 overflow-hidden rounded-xl bg-[#6fffcb]\">\n      <div className=\"flex flex-col justify-center items-center w-full h-full \">\n        <Image\n          src={src}\n          alt={alt}\n          className=\"w-1/2 h-1/2 object-cover rounded-full mb-4\"\n        />\n        <p className=\"text-2xl font-semibold text-white\">{title}</p>\n        <p className=\" text-white\"> Total Sales: {description}</p>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default UserCard;"
    }
  }
}